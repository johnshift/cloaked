name: Dev

on:
  push:
    branches: [dev]

# if both api and integration branch pushed
# cancel other and only run 1 at a time
concurrency:
  group: api-frontend-integration
  cancel-in-progress: true

jobs:

  api-frontend-integration:
    name: API + Frontend Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'dev'
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'maven'
      - name: Build Api
        working-directory: ./api
        run: mvn clean install -DskipTests
      - name: Setup Frontend
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: frontend/yarn.lock
      - name: Install Yarn
        run: npm install -g yarn
      - name: Compile Frontend
        working-directory: ./frontend
        run: yarn install && yarn build
      - name: Run End-to-End Tests
        uses: cypress-io/github-action@v2
        with:
          start: yarn start
          working-directory: ./frontend
          wait-on: "http://localhost:5000"
          wait-on-timeout: 30
          browser: chrome
          headless: true

  merge-to-staging:
    name: Merge dev -> staging
    runs-on: ubuntu-latest
    needs: [api-frontend-integration]
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Merge
        run: |
          git config --global user.email ${{ secrets.EMAIL }}
          git config --global user.user ${{ secrets.NAME }}
          git checkout staging
          git merge dev --commit -m 'merge dev -> staging'
          git push origin staging
      
  # upload-artifact:
  #   name: Upload Artifact
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: zip
  #       run: zip -r cloaked.zip .
  #     - name: upload
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: cloaked-artifact
  #         path: cloaked.zip
  #         retention-days: 1

  # download-artifact:
  #   name: Download Artifact
  #   needs: [upload-artifact]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: download the uploaded artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: cloaked-artifact
  #     - name: unzip
  #       run: unzip cloaked.zip